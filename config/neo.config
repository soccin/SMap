/*
 * -------------------------------------------------
 * Neo (WGS) config
 * -------------------------------------------------
 * Pipeline parameters specific to running nextflow/nf-core pipelines on new JUNO
 * -------------------------------------------------
 * This vesion is optimizes for running BAM generation on WGS samples
 */

executor {
  name = "lsf"
  queueSize = 5000000000
  //
  // Our (JUNO) LSF is configured to use memory per core
  // so this should be set to _false_. But need to adjust
  // the memory settings below to reflect this.
  // And also need to set perTaskReserve = true
  // for this to work
  //
  perJobMemLimit = false
  perTaskReserve = true
  submitRateLimit = '10 sec' // dkfz.config was '3 sec' this is per sec, so speed up 3x
}

process {
  memory = "8.GB"
  time = { task.attempt < 3 ? 3.h * task.attempt  : 500.h }
  clusterOptions = "-R cmorsc1"
  scratch = true
  beforeScript = "module load singularity/3.1.1; unset R_LIBS; catch_term () { echo 'caught USR2/TERM signal'; set +e; false; on_exit ; } ; trap catch_term USR2 TERM"
  maxRetries = 3
  errorStrategy = { task.attempt <= process.maxRetries ? 'retry' : 'ignore' }

/*

MarkDups Run Time Issues

https://gatk.broadinstitute.org/hc/en-us/community/posts/15524085820699-MarkDuplicates-Extremely-Long-Runtime

*/

  // From base.config
  //
  // withName: 'GATK4_MARKDUPLICATES|GATK4SPARK_MARKDUPLICATES' {
  //     cpus   = { check_max( 6 * task.attempt, 'cpus' ) }
  //     memory = { check_max( 30.GB * task.attempt, 'memory' ) }
  // }
  // withName:'GATK4_APPLYBQSR|GATK4SPARK_APPLYBQSR|GATK4_BASERECALIBRATOR|GATK4SPARK_BASERECALIBRATOR|GATK4_GATHERBQSRREPORTS'{
  //     cpus   = { check_max( 2 * task.attempt, 'cpus' ) }
  //     memory = { check_max( 4.GB * task.attempt, 'memory' ) }
  // }
  // withName: 'BWAMEM1_MEM|BWAMEM2_MEM' {
  //     cpus   = { check_max( 24 * task.attempt, 'cpus' ) }
  //     memory = { check_max( 30.GB * task.attempt, 'memory' ) }
  // }

  withName: 'BWAMEM1_MEM|BWAMEM2_MEM' {
      cpus   = { 24 * task.attempt }
      memory = { 24.GB * task.attempt }
  }

  withName: 'GATK4_MARKDUPLICATES' {
    cpus = { 48 }
    memory = { 96.GB } // 48 cores * 2GB per core
    time = { task.attempt < 3 ? 18.h * task.attempt  : 72.h }
    ext.args = "--MAX_RECORDS_IN_RAM 20000000 --SORTING_COLLECTION_SIZE_RATIO .15"
  }

  withName: 'GATK4_APPLYBQSR|GATK4_BASERECALIBRATOR' {
    cpus = { 12 * task.attempt }
    memory = { 24.GB * task.attempt } // 12 cores * 2GB per core
    time = { task.attempt < 3 ? 6.h * task.attempt  : 18.h }
  }

  withName: ".*BAM_APPLYBQSR:CRAM_MERGE_INDEX_SAMTOOLS:MERGE_CRAM" {
    cpus = { 20 }
    memory = { 20.GB } // 20 cores * 1GB per core
    time = { task.attempt < 3 ? 7.h * task.attempt  : 21.h }
  }

  withName: ".*CRAM_SAMPLEQC:CRAM_QC_RECAL:SAMTOOLS_STATS" {
    cpus = { 20 }
    memory = { 20.GB } // 20 cores * 1GB per core
    time = { task.attempt < 3 ? 7.h * task.attempt  : 21.h }
  }

  withName: ".*NFCORE_SAREK:SAREK:FASTQC" {
    memory = { 24.GB * task.attempt }
    time = { task.attempt < 3 ? 3.h * task.attempt  : 9.h }
  }

  withName: "FASTP" {
    cpus   = { 12 }
    memory = { 12.GB }
    time = { task.attempt < 3 ? 1.h * task.attempt  : 4.h }
  }

}

params {

  // WARN: The following invalid input values have been detected:

  // * --mem_per_core: true
  // * --minWallTime: 6h
  // * --min-wall-time: 6h
  // * --medWallTime: 12h
  // * --med-wall-time: 12h
  // * --maxWallTime: 20d 20h
  // * --max-wall-time: 20d 20h
  // * --wallTimeExitCode: 140,0,1,143
  // * --wall-time-exit-code: 140,0,1,143

  // mem_per_core = true
  // minWallTime = 6.h
  // medWallTime = 12.h
  // maxWallTime = 500.h
  // wallTimeExitCode = '140,0,1,143'

  max_memory = "12.GB"
  ngscheckmate_bed = "/juno/bic/work/socci/Work/Users/ElenitK/Wur4/Proj_15673/Sarek/assets/SNP_GRCh37_hg19_woChr.bed"

}

env {
  SPARK_LOCAL_DIRS = './'
}

aws {
    client {
        anonymous = true
    }
}

